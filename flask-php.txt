
To retrieve data from a Google Sheet and display it on a WordPress website, you can create a simple API using Python and Flask, and then use this API to fetch the data in your WordPress website. Here's how you can do it:

**Create a Python API:**

1. Install Flask and other required libraries:

   ```bash
   pip install Flask gspread oauth2client
   ```

2. Create a Python script for the API:

   ```python
   from flask import Flask, jsonify
   import gspread
   from oauth2client.service_account import ServiceAccountCredentials

   app = Flask(__name__)

   # Google Sheets setup
   scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
   creds = ServiceAccountCredentials.from_json_keyfile_name('credentials.json', scope)
   client = gspread.authorize(creds)
   spreadsheet = client.open('Your Google Spreadsheet Name')  # Replace with your Google Spreadsheet name
   worksheet = spreadsheet.get_worksheet(0)

   @app.route('/get_data', methods=['GET'])
   def get_data():
       data = worksheet.get_all_records()
       return jsonify(data)

   if __name__ == '__main__':
       app.run(host='0.0.0.0', port=5000)
   ```

   Replace `'Your Google Spreadsheet Name'` with your actual Google Spreadsheet name, and ensure you have the `credentials.json` file in the same directory as the script.

3. Run the API:

   ```bash
   python your_api_script.py
   ```

**Access Data in WordPress:**

1. In your WordPress website, you can use PHP to make a GET request to the API and retrieve the data. You can do this using the `wp_remote_get` function.

2. Create a WordPress page or template where you want to display the data.

3. Add the following PHP code to make the API request and display the data:

   ```php
   <?php
   $api_url = 'http://your-api-url/get_data';  // Replace with the actual URL of your API.

   $response = wp_remote_get($api_url);

   if (is_array($response) && !is_wp_error($response)) {
       $data = json_decode($response['body'], true);
       foreach ($data as $row) {
           echo '<p>' . $row['timestamp'] . ' - ' . $row['message'] . '</p>';
       }
   } else {
       echo 'Error fetching data.';
   }
   ?>
   ```

   Replace `'http://your-api-url/get_data'` with the actual URL of your API.

4. Save and publish the WordPress page or template, and it will display the data from your Google Sheet via the API.

Make sure to secure your API endpoints and consider implementing authentication and access controls based on your needs to protect sensitive data.

